<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:batch="http://www.springframework.org/schema/batch"
       xmlns:util="http://www.springframework.org/schema/util"
       xmlns:c="http://www.springframework.org/schema/c"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
       http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="archNucRecDelimitedLineTokenizer"
          class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer" scope="step"
          p:delimiter="#{jobParameters[generic_field_delimiter]}"
          p:names="#{jobParameters[archNucRec_field_names]}"
          p:includedFields="#{jobParameters[archNucRec_field_indexes]}"/>

    <bean id="archNucRecLoadingFieldSetMapper" class="com.gds.batch.mapper.ArchNucRecLoadingFieldSetMapper"/>

    <bean id="archNucRecLineMapper" class="org.springframework.batch.item.file.mapping.DefaultLineMapper"
          p:lineTokenizer-ref="archNucRecDelimitedLineTokenizer"
          p:fieldSetMapper-ref="archNucRecLoadingFieldSetMapper"/>

    <batch:job id="archNucRecFileWriterJob">

        <batch:step id="preArchNucRecImportClearDownStep" next="dropCreateArchNucRecLoadingStep">
            <batch:tasklet>
                <bean class="com.gds.batch.tasklet.RepositoryCleansingTasklet" c:repository-ref="archNucRecRepository" scope="step"/>
            </batch:tasklet>
        </batch:step>

        <batch:step id="dropCreateArchNucRecLoadingStep">
            <batch:tasklet>
                <batch:chunk writer="writer" commit-interval="1000" skip-limit="99">
                    <batch:reader>
                        <bean id="archNucRecFileReader" class="org.springframework.batch.item.file.FlatFileItemReader"
                              scope="step"
                              p:resource="file:#{jobParameters[archNucRec_input_file]}" p:linesToSkip="1"
                              p:recordSeparatorPolicy-ref="recordSeparatorPolicy"
                              p:lineMapper-ref="archNucRecLineMapper"/>
                    </batch:reader>
                    <batch:processor>
                        <ref bean="entityValidationProcessor"/>
                    </batch:processor>
                    <batch:skippable-exception-classes>
                        <batch:include class="org.springframework.batch.item.ItemReaderException"/>
                        <batch:include class="org.springframework.batch.item.file.FlatFileParseException"/>
                        <batch:include class="org.springframework.batch.item.file.transform.IncorrectTokenCountException"/>
                    </batch:skippable-exception-classes>
                    <batch:listeners>
                        <batch:listener ref="validationExceptionListener"/>
                        <batch:listener ref="springBatchStepStopWatchListener"/>
                    </batch:listeners>
                </batch:chunk>
            </batch:tasklet>
            <batch:end on="*"/>
            <batch:next on="FAILED" to="postArchNucRecDropCreateClearDownStep"/>
        </batch:step>

        <batch:step id="postArchNucRecDropCreateClearDownStep">
            <batch:tasklet>
                <bean class="com.gds.batch.tasklet.RepositoryCleansingTasklet" c:repository-ref="archNucRecRepository" scope="step"/>
            </batch:tasklet>
            <batch:listeners>
                <batch:listener ref="cleanUpExitStatusListener"/>
            </batch:listeners>
        </batch:step>

    </batch:job>

</beans>